(window.WssBaomoiWebJsonp=window.WssBaomoiWebJsonp||[]).push([[37],{116:function(n,e,t){t(9)(t(588))},117:function(n,e,t){t(9)(t(590))},118:function(n,e){function s(){DTUtil.on(document.body,"#back-to-old-version",function(n){n.preventDefault(),document.cookie="version2020=0;expires=7;domain=.dantri.com.vn;path=/",window.location.href="//dantri.com.vn"})}var l=function(n,e){var t=window.pageYOffset||document.documentElement.scrollTop;e&&t>=e.top?DTUtil.addClass(n,"site-menu--fixed"):DTUtil.removeClass(n,"site-menu--fixed")};DTUtil.ready(function(){var n,e,t,i,r,a,o;new Sticky(".dt-news__social"),new Swiper("#js-news-home",{spaceBetween:16,slidesPerView:2,loop:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}),new Swiper(".dt-slider--top-news",{spaceBetween:16,slidesPerView:3,loop:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"}}),i=DTUtil.getByID("site-dropdown"),r=DTUtil.getByID("site-dropdown-button"),i&&(DTUtil.on(i,"#site-dropdown-button","click",function(){clearTimeout(n),clearTimeout(e),t||(DTUtil.hasClass(i,"active")?DTUtil.removeClass(i,"active"):DTUtil.addClass(i,"active"))}),DTUtil.on(document.body,"#site-dropdown","mouseover",function(){clearTimeout(n)}),r.addEventListener("mouseenter",function(){DTUtil.hasClass(i,"active")||(e=setTimeout(function(){DTUtil.addClass(i,"active"),t=!0,setTimeout(function(){t=!1},400)},400))}),i.addEventListener("mouseleave",function(){n=setTimeout(function(){DTUtil.removeClass(i,"active")},400)})),void 0===window.disableSticky&&(a=DTUtil.getByClass("site-menu"),o=DTUtil.offset(a),a&&(window.onscroll=function(){l(a,o)},l(a,o))),s()})},588:function(n,e){n.exports='function _classCallCheck(t, e) {\n  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");\n}\n\nfunction _defineProperties(t, e) {\n  for (var i = 0; i < e.length; i++) {\n    var s = e[i];\n    s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s);\n  }\n}\n\nfunction _createClass(t, e, i) {\n  return e && _defineProperties(t.prototype, e), i && _defineProperties(t, i), t;\n}\n\nvar Sticky = function () {\n  function i() {\n    var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "",\n        e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};\n    _classCallCheck(this, i), this.selector = t, this.elements = [], this.version = "1.2.1", this.vp = this.getViewportSize(), this.body = document.querySelector("body"), this.options = {\n      wrap: e.wrap || !1,\n      marginTop: e.marginTop || 0,\n      stickyFor: e.stickyFor || 0,\n      stickyClass: e.stickyClass || null,\n      stickyContainer: e.stickyContainer || "body"\n    }, this.updateScrollTopPosition = this.updateScrollTopPosition.bind(this), this.updateScrollTopPosition(), window.addEventListener("load", this.updateScrollTopPosition), window.addEventListener("scroll", this.updateScrollTopPosition), this.run();\n  }\n\n  return _createClass(i, [{\n    key: "run",\n    value: function value() {\n      var e = this,\n          i = setInterval(function () {\n        if ("complete" === document.readyState) {\n          clearInterval(i);\n          var t = document.querySelectorAll(e.selector);\n          e.forEach(t, function (t) {\n            return e.renderElement(t);\n          });\n        }\n      }, 10);\n    }\n  }, {\n    key: "renderElement",\n    value: function value(t) {\n      var e = this;\n      t.sticky = {}, t.sticky.active = !1, t.sticky.marginTop = parseInt(t.getAttribute("data-margin-top")) || this.options.marginTop, t.sticky.stickyFor = parseInt(t.getAttribute("data-sticky-for")) || this.options.stickyFor, t.sticky.stickyClass = t.getAttribute("data-sticky-class") || this.options.stickyClass, t.sticky.wrap = !!t.hasAttribute("data-sticky-wrap") || this.options.wrap, t.sticky.stickyContainer = this.options.stickyContainer, t.sticky.container = this.getStickyContainer(t), t.sticky.container.rect = this.getRectangle(t.sticky.container), t.sticky.rect = this.getRectangle(t), "img" === t.tagName.toLowerCase() && (t.onload = function () {\n        return t.sticky.rect = e.getRectangle(t);\n      }), t.sticky.wrap && this.wrapElement(t), this.activate(t);\n    }\n  }, {\n    key: "wrapElement",\n    value: function value(t) {\n      t.insertAdjacentHTML("beforebegin", "<span></span>"), t.previousSibling.appendChild(t);\n    }\n  }, {\n    key: "activate",\n    value: function value(t) {\n      t.sticky.rect.top + t.sticky.rect.height < t.sticky.container.rect.top + t.sticky.container.rect.height && t.sticky.stickyFor < this.vp.width && !t.sticky.active && (t.sticky.active = !0), this.elements.indexOf(t) < 0 && this.elements.push(t), t.sticky.resizeEvent || (this.initResizeEvents(t), t.sticky.resizeEvent = !0), t.sticky.scrollEvent || (this.initScrollEvents(t), t.sticky.scrollEvent = !0), this.setPosition(t);\n    }\n  }, {\n    key: "initResizeEvents",\n    value: function value(t) {\n      var e = this;\n      t.sticky.resizeListener = function () {\n        return e.onResizeEvents(t);\n      }, window.addEventListener("resize", t.sticky.resizeListener);\n    }\n  }, {\n    key: "destroyResizeEvents",\n    value: function value(t) {\n      window.removeEventListener("resize", t.sticky.resizeListener);\n    }\n  }, {\n    key: "onResizeEvents",\n    value: function value(t) {\n      this.vp = this.getViewportSize(), t.sticky.rect = this.getRectangle(t), t.sticky.container.rect = this.getRectangle(t.sticky.container), t.sticky.rect.top + t.sticky.rect.height < t.sticky.container.rect.top + t.sticky.container.rect.height && t.sticky.stickyFor < this.vp.width && !t.sticky.active ? t.sticky.active = !0 : (t.sticky.rect.top + t.sticky.rect.height >= t.sticky.container.rect.top + t.sticky.container.rect.height || t.sticky.stickyFor >= this.vp.width && t.sticky.active) && (t.sticky.active = !1), this.setPosition(t);\n    }\n  }, {\n    key: "initScrollEvents",\n    value: function value(t) {\n      var e = this;\n      t.sticky.scrollListener = function () {\n        return e.onScrollEvents(t);\n      }, window.addEventListener("scroll", t.sticky.scrollListener);\n    }\n  }, {\n    key: "destroyScrollEvents",\n    value: function value(t) {\n      window.removeEventListener("scroll", t.sticky.scrollListener);\n    }\n  }, {\n    key: "onScrollEvents",\n    value: function value(t) {\n      t.sticky.active && this.setPosition(t);\n    }\n  }, {\n    key: "setPosition",\n    value: function value(t) {\n      this.css(t, {\n        position: "",\n        width: "",\n        top: "",\n        left: ""\n      }), this.vp.height < t.sticky.rect.height || !t.sticky.active || (t.sticky.rect.width || (t.sticky.rect = this.getRectangle(t)), t.sticky.wrap && this.css(t.parentNode, {\n        display: "block",\n        width: t.sticky.rect.width + "px",\n        height: t.sticky.rect.height + "px"\n      }), 0 === t.sticky.rect.top && t.sticky.container === this.body ? this.css(t, {\n        position: "fixed",\n        top: t.sticky.rect.top + "px",\n        left: t.sticky.rect.left + "px",\n        width: t.sticky.rect.width + "px"\n      }) : this.scrollTop > t.sticky.rect.top - t.sticky.marginTop ? (this.css(t, {\n        position: "fixed",\n        width: t.sticky.rect.width + "px",\n        left: t.sticky.rect.left + "px"\n      }), this.scrollTop + t.sticky.rect.height + t.sticky.marginTop > t.sticky.container.rect.top + t.sticky.container.offsetHeight ? (t.sticky.stickyClass && t.classList.remove(t.sticky.stickyClass), this.css(t, {\n        top: t.sticky.container.rect.top + t.sticky.container.offsetHeight - (this.scrollTop + t.sticky.rect.height) + "px"\n      })) : (t.sticky.stickyClass && t.classList.add(t.sticky.stickyClass), this.css(t, {\n        top: t.sticky.marginTop + "px"\n      }))) : (t.sticky.stickyClass && t.classList.remove(t.sticky.stickyClass), this.css(t, {\n        position: "",\n        width: "",\n        top: "",\n        left: ""\n      }), t.sticky.wrap && this.css(t.parentNode, {\n        display: "",\n        width: "",\n        height: ""\n      })));\n    }\n  }, {\n    key: "update",\n    value: function value() {\n      var e = this;\n      this.forEach(this.elements, function (t) {\n        t.sticky.rect = e.getRectangle(t), t.sticky.container.rect = e.getRectangle(t.sticky.container), e.activate(t), e.setPosition(t);\n      });\n    }\n  }, {\n    key: "destroy",\n    value: function value() {\n      var e = this;\n      window.removeEventListener("load", this.updateScrollTopPosition), window.removeEventListener("scroll", this.updateScrollTopPosition), this.forEach(this.elements, function (t) {\n        e.destroyResizeEvents(t), e.destroyScrollEvents(t), delete t.sticky;\n      });\n    }\n  }, {\n    key: "getStickyContainer",\n    value: function value(t) {\n      for (var e = t.parentNode; !e.hasAttribute("data-sticky-container") && !e.parentNode.querySelector(t.sticky.stickyContainer) && e !== this.body;) {\n        e = e.parentNode;\n      }\n\n      return e;\n    }\n  }, {\n    key: "getRectangle",\n    value: function value(t) {\n      this.css(t, {\n        position: "",\n        width: "",\n        top: "",\n        left: ""\n      });\n\n      for (var e = Math.max(t.offsetWidth, t.clientWidth, t.scrollWidth), i = Math.max(t.offsetHeight, t.clientHeight, t.scrollHeight), s = 0, n = 0; s += t.offsetTop || 0, n += t.offsetLeft || 0, t = t.offsetParent;) {\n        ;\n      }\n\n      return {\n        top: s,\n        left: n,\n        width: e,\n        height: i\n      };\n    }\n  }, {\n    key: "getViewportSize",\n    value: function value() {\n      return {\n        width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n        height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n      };\n    }\n  }, {\n    key: "updateScrollTopPosition",\n    value: function value() {\n      this.scrollTop = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0) || 0;\n    }\n  }, {\n    key: "forEach",\n    value: function value(t, e) {\n      for (var i = 0, s = t.length; i < s; i++) {\n        e(t[i]);\n      }\n    }\n  }, {\n    key: "css",\n    value: function value(t, e) {\n      for (var i in e) {\n        e.hasOwnProperty(i) && (t.style[i] = e[i]);\n      }\n    }\n  }]), i;\n}();\n\n!function (t, e) {\n  "undefined" != typeof exports ? module.exports = e : "function" == typeof define && define.amd ? define([], function () {\n    return e;\n  }) : t.Sticky = e;\n}(this, Sticky);'},590:function(n,e){n.exports="function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\r\n * @class DTUtil  base utilize class that privides helper functions\r\n */\n// Polyfills\n\n/**\r\n * Element.matches() polyfill (simple version)\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\r\n */\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n/**\r\n * Element.closest() polyfill\r\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/closest#Polyfill\r\n */\n\n\nif (!Element.prototype.closest) {\n  if (!Element.prototype.matches) {\n    Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n  }\n\n  Element.prototype.closest = function (s) {\n    var el = this;\n    var ancestor = this;\n    if (!document.documentElement.contains(el)) return null;\n\n    do {\n      if (ancestor.matches(s)) return ancestor;\n      ancestor = ancestor.parentElement;\n    } while (ancestor !== null);\n\n    return null;\n  };\n}\n/**\r\n * ChildNode.remove() polyfill\r\n * https://gomakethings.com/removing-an-element-from-the-dom-the-es6-way/\r\n * @author Chris Ferdinandi\r\n * @license MIT\r\n */\n\n\n(function (elem) {\n  for (var i = 0; i < elem.length; i++) {\n    if (!window[elem[i]] || 'remove' in window[elem[i]].prototype) continue;\n\n    window[elem[i]].prototype.remove = function () {\n      this.parentNode.removeChild(this);\n    };\n  }\n})(['Element', 'CharacterData', 'DocumentType']); //\n// requestAnimationFrame polyfill by Erik Möller.\n//  With fixes from Paul Irish and Tino Zijdel\n//\n//  http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n//  http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n//\n//  MIT license\n//\n\n\n(function () {\n  var lastTime = 0;\n  var vendors = ['webkit', 'moz'];\n\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    window.requestAnimationFrame = window[\"\".concat(vendors[x], \"RequestAnimationFrame\")];\n    window.cancelAnimationFrame = window[\"\".concat(vendors[x], \"CancelAnimationFrame\")] || window[\"\".concat(vendors[x], \"CancelRequestAnimationFrame\")];\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function (callback) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n      var id = window.setTimeout(function () {\n        callback(currTime + timeToCall);\n      }, timeToCall);\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  }\n})(); // Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\n\n\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('prepend')) {\n      return;\n    }\n\n    Object.defineProperty(item, 'prepend', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function prepend() {\n        var argArr = Array.prototype.slice.call(arguments),\n            docFrag = document.createDocumentFragment();\n        argArr.forEach(function (argItem) {\n          var isNode = argItem instanceof Node;\n          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n        });\n        this.insertBefore(docFrag, this.firstChild);\n      }\n    });\n  });\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]); // Global variables\n\n\nwindow.DTUtilElementDataStore = {};\nwindow.DTUtilElementDataStoreID = 0;\nwindow.DTUtilDelegatedEventHandlers = {};\n\nwindow.DTUtil = function () {\n  var resizeHandlers = [];\n  /** @type {object} breakpoints The device width breakpoints * */\n\n  var breakpoints = {\n    sm: 544,\n    // Small screen / phone\n    md: 768,\n    // Medium screen / tablet\n    lg: 1024,\n    // Large screen / desktop\n    xl: 1200 // Extra large screen / wide desktop\n\n  };\n  /**\r\n   * Handle window resize event with some\r\n   * delay to attach event handlers upon resize complete\r\n   */\n\n  var _windowResizeHandler = function _windowResizeHandler() {\n    var _runResizeHandlers = function _runResizeHandlers() {\n      // reinitialize other subscribed elements\n      for (var i = 0; i < resizeHandlers.length; i++) {\n        var each = resizeHandlers[i];\n        each.call();\n      }\n    };\n\n    var timeout = false; // holder for timeout id\n\n    var delay = 250; // delay after event is \"complete\" to run callback\n\n    window.addEventListener('resize', function () {\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        _runResizeHandlers();\n      }, delay); // wait 50ms until window resize finishes.\n    });\n  };\n\n  return {\n    /**\r\n     * Class main initializer.\r\n     * @param {object} options.\r\n     * @returns null\r\n     */\n    // main function to initiate the theme\n    init: function init(options) {\n      if (options && options.breakpoints) {\n        breakpoints = options.breakpoints;\n      }\n\n      _windowResizeHandler();\n    },\n\n    /**\r\n     * Adds window resize event handler.\r\n     * @param {function} callback function.\r\n     */\n    addResizeHandler: function addResizeHandler(callback) {\n      resizeHandlers.push(callback);\n    },\n\n    /**\r\n     * Removes window resize event handler.\r\n     * @param {function} callback function.\r\n     */\n    removeResizeHandler: function removeResizeHandler(callback) {\n      for (var i = 0; i < resizeHandlers.length; i++) {\n        if (callback === resizeHandlers[i]) {\n          delete resizeHandlers[i];\n        }\n      }\n    },\n\n    /**\r\n     * Trigger window resize handlers.\r\n     */\n    runResizeHandlers: function runResizeHandlers() {\n      _runResizeHandlers();\n    },\n    resize: function resize() {\n      if (typeof Event === 'function') {\n        // modern browsers\n        window.dispatchEvent(new Event('resize'));\n      } else {\n        // for IE and other old browsers\n        // causes deprecation warning on modern browsers\n        var evt = window.document.createEvent('UIEvents');\n        evt.initUIEvent('resize', true, false, window, 0);\n        window.dispatchEvent(evt);\n      }\n    },\n\n    /**\r\n     * Get GET parameter value from URL.\r\n     * @param {string} paramName Parameter name.\r\n     * @returns {string}\r\n     */\n    getURLParam: function getURLParam(paramName) {\n      var searchString = window.location.search.substring(1),\n          i,\n          val,\n          params = searchString.split('&');\n\n      for (i = 0; i < params.length; i++) {\n        val = params[i].split('=');\n\n        if (val[0] == paramName) {\n          return unescape(val[1]);\n        }\n      }\n\n      return null;\n    },\n\n    /**\r\n     * Checks whether current device is mobile touch.\r\n     * @returns {boolean}\r\n     */\n    isMobileDevice: function isMobileDevice() {\n      return this.getViewPort().width < this.getBreakpoint('lg');\n    },\n\n    /**\r\n     * Checks whether current device is desktop.\r\n     * @returns {boolean}\r\n     */\n    isDesktopDevice: function isDesktopDevice() {\n      return !DTUtil.isMobileDevice();\n    },\n\n    /**\r\n     * Gets browser window viewport size. Ref:\r\n     * http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\r\n     * @returns {object}\r\n     */\n    getViewPort: function getViewPort() {\n      var e = window,\n          a = 'inner';\n\n      if (!('innerWidth' in window)) {\n        a = 'client';\n        e = document.documentElement || document.body;\n      }\n\n      return {\n        width: e[\"\".concat(a, \"Width\")],\n        height: e[\"\".concat(a, \"Height\")]\n      };\n    },\n\n    /**\r\n     * Checks whether given device mode is currently activated.\r\n     * @param {string} mode Responsive mode name(e.g: desktop,\r\n     *     desktop-and-tablet, tablet, tablet-and-mobile, mobile)\r\n     * @returns {boolean}\r\n     */\n    isInResponsiveRange: function isInResponsiveRange(mode) {\n      var breakpoint = this.getViewPort().width;\n\n      if (mode == 'general') {\n        return true;\n      } else if (mode == 'desktop' && breakpoint >= this.getBreakpoint('lg') + 1) {\n        return true;\n      } else if (mode == 'tablet' && breakpoint >= this.getBreakpoint('md') + 1 && breakpoint < this.getBreakpoint('lg')) {\n        return true;\n      } else if (mode == 'mobile' && breakpoint <= this.getBreakpoint('md')) {\n        return true;\n      } else if (mode == 'desktop-and-tablet' && breakpoint >= this.getBreakpoint('md') + 1) {\n        return true;\n      } else if (mode == 'tablet-and-mobile' && breakpoint <= this.getBreakpoint('lg')) {\n        return true;\n      } else if (mode == 'minimal-desktop-and-below' && breakpoint <= this.getBreakpoint('xl')) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\r\n     * Generates unique ID for give prefix.\r\n     * @param {string} prefix Prefix for generated ID\r\n     * @returns {boolean}\r\n     */\n    getUniqueID: function getUniqueID(prefix) {\n      return prefix + Math.floor(Math.random() * new Date().getTime());\n    },\n\n    /**\r\n     * Gets window width for give breakpoint mode.\r\n     * @param {string} mode Responsive mode name(e.g: xl, lg, md, sm)\r\n     * @returns {number}\r\n     */\n    getBreakpoint: function getBreakpoint(mode) {\n      return breakpoints[mode];\n    },\n\n    /**\r\n     * Checks whether object has property matchs given key path.\r\n     * @param {object} obj Object contains values paired with given key path\r\n     * @param {string} keys Keys path seperated with dots\r\n     * @returns {object}\r\n     */\n    isset: function isset(obj, keys) {\n      var stone;\n      keys = keys || '';\n\n      if (keys.indexOf('[') !== -1) {\n        throw new Error('Unsupported object path notation.');\n      }\n\n      keys = keys.split('.');\n\n      do {\n        if (obj === undefined) {\n          return false;\n        }\n\n        stone = keys.shift();\n\n        if (!obj.hasOwnProperty(stone)) {\n          return false;\n        }\n\n        obj = obj[stone];\n      } while (keys.length);\n\n      return true;\n    },\n\n    /**\r\n     * Gets highest z-index of the given element parents\r\n     * @param {object} el jQuery element object\r\n     * @returns {number}\r\n     */\n    getHighestZindex: function getHighestZindex(el) {\n      var elem = DTUtil.get(el),\n          position,\n          value;\n\n      while (elem && elem !== document) {\n        // Ignore z-index if position is set to a value where z-index is ignored by the browser\n        // This makes behavior of this function consistent across browsers\n        // WebKit always returns auto if the element is positioned\n        position = DTUtil.css(elem, 'position');\n\n        if (position === 'absolute' || position === 'relative' || position === 'fixed') {\n          // IE returns 0 when zIndex is not specified\n          // other browsers return a string\n          // we ignore the case of nested elements with an explicit value of 0\n          // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\n          value = parseInt(DTUtil.css(elem, 'z-index'));\n\n          if (!isNaN(value) && value !== 0) {\n            return value;\n          }\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\r\n     * Checks whether the element has any parent with fixed positionfreg\r\n     * @param {object} el jQuery element object\r\n     * @returns {boolean}\r\n     */\n    hasFixedPositionedParent: function hasFixedPositionedParent(el) {\n      var position;\n\n      while (el && el !== document) {\n        position = DTUtil.css(el, 'position');\n\n        if (position === 'fixed') {\n          return true;\n        }\n\n        el = el.parentNode;\n      }\n\n      return false;\n    },\n\n    /**\r\n     * Simulates delay\r\n     */\n    sleep: function sleep(milliseconds) {\n      var start = new Date().getTime();\n\n      for (var i = 0; i < 1e7; i++) {\n        if (new Date().getTime() - start > milliseconds) {\n          break;\n        }\n      }\n    },\n\n    /**\r\n     * Gets randomly generated integer value within given min and max range\r\n     * @param {number} min Range start value\r\n     * @param {number} max Range end value\r\n     * @returns {number}\r\n     */\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\r\n     * Checks whether Angular library is included\r\n     * @returns {boolean}\r\n     */\n    isAngularVersion: function isAngularVersion() {\n      return window.Zone !== undefined;\n    },\n    // jQuery Workarounds\n    // Deep extend:  $.extend(true, {}, objA, objB);\n    deepExtend: function deepExtend(out) {\n      out = out || {};\n\n      for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n\n        if (!obj) {\n          continue;\n        }\n\n        for (var key in obj) {\n          if (obj.hasOwnProperty(key)) {\n            if (_typeof(obj[key]) === 'object') {\n              out[key] = DTUtil.deepExtend(out[key], obj[key]);\n            } else {\n              out[key] = obj[key];\n            }\n          }\n        }\n      }\n\n      return out;\n    },\n    // extend:  $.extend({}, objA, objB);\n    extend: function extend(out) {\n      out = out || {};\n\n      for (var i = 1; i < arguments.length; i++) {\n        if (!arguments[i]) {\n          continue;\n        }\n\n        for (var key in arguments[i]) {\n          if (arguments[i].hasOwnProperty(key)) {\n            out[key] = arguments[i][key];\n          }\n        }\n      }\n\n      return out;\n    },\n    get: function get(query) {\n      var el;\n\n      if (query === document) {\n        return document;\n      }\n\n      if (query && query.nodeType === 1) {\n        return query;\n      }\n\n      if (el = document.getElementById(query)) {\n        return el;\n      } else if (el = document.getElementsByTagName(query)) {\n        return el[0];\n      } else if (el = document.getElementsByClassName(query)) {\n        return el[0];\n      }\n\n      return null;\n    },\n    getByID: function getByID(query) {\n      if (query && query.nodeType === 1) {\n        return query;\n      }\n\n      return document.getElementById(query);\n    },\n    getByTag: function getByTag(query) {\n      var el;\n\n      if (el = document.getElementsByTagName(query)) {\n        return el[0];\n      }\n\n      return null;\n    },\n    getByClass: function getByClass(query) {\n      var el;\n\n      if (el = document.getElementsByClassName(query)) {\n        return el[0];\n      }\n\n      return null;\n    },\n\n    /**\r\n     * Checks whether the element has given classes\r\n     * @param {object} el jQuery element object\r\n     * @param {string} Classes string\r\n     * @returns {boolean}\r\n     */\n    hasClasses: function hasClasses(el, classes) {\n      if (!el) {\n        return;\n      }\n\n      var classesArr = classes.split(' ');\n\n      for (var i = 0; i < classesArr.length; i++) {\n        if (DTUtil.hasClass(el, DTUtil.trim(classesArr[i])) == false) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    hasClass: function hasClass(el, className) {\n      if (!el) {\n        return;\n      }\n\n      return el.classList ? el.classList.contains(className) : new RegExp(\"\\\\b\".concat(className, \"\\\\b\")).test(el.className);\n    },\n    addClass: function addClass(el, className) {\n      if (!el || typeof className === 'undefined') {\n        return;\n      }\n\n      var classNames = className.split(' ');\n\n      if (el.classList) {\n        for (var i = 0; i < classNames.length; i++) {\n          if (classNames[i] && classNames[i].length > 0) {\n            el.classList.add(DTUtil.trim(classNames[i]));\n          }\n        }\n      } else if (!DTUtil.hasClass(el, className)) {\n        for (var x = 0; x < classNames.length; x++) {\n          el.className += \" \".concat(DTUtil.trim(classNames[x]));\n        }\n      }\n    },\n    removeClass: function removeClass(el, className) {\n      if (!el || typeof className === 'undefined') {\n        return;\n      }\n\n      var classNames = className.split(' ');\n\n      if (el.classList) {\n        for (var i = 0; i < classNames.length; i++) {\n          el.classList.remove(DTUtil.trim(classNames[i]));\n        }\n      } else if (DTUtil.hasClass(el, className)) {\n        for (var x = 0; x < classNames.length; x++) {\n          el.className = el.className.replace(new RegExp(\"\\\\b\".concat(DTUtil.trim(classNames[x]), \"\\\\b\"), 'g'), '');\n        }\n      }\n    },\n    triggerCustomEvent: function triggerCustomEvent(el, eventName, data) {\n      var event;\n\n      if (window.CustomEvent) {\n        event = new CustomEvent(eventName, {\n          detail: data\n        });\n      } else {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventName, true, true, data);\n      }\n\n      el.dispatchEvent(event);\n    },\n    triggerEvent: function triggerEvent(node, eventName) {\n      // Make sure we use the ownerDocument from the provided node to avoid cross-window problems\n      var doc;\n\n      if (node.ownerDocument) {\n        doc = node.ownerDocument;\n      } else if (node.nodeType == 9) {\n        // the node may be the document itself, nodeType 9 = DOCUMENT_NODE\n        doc = node;\n      } else {\n        throw new Error(\"Invalid node passed to fireEvent: \".concat(node.id));\n      }\n\n      if (node.dispatchEvent) {\n        // Gecko-style approach (now the standard) takes more work\n        var eventClass = ''; // Different events have different event classes.\n        // If this switch statement can't map an eventName to an eventClass,\n        // the event firing is going to fail.\n\n        switch (eventName) {\n          case 'click': // Dispatching of 'click' appears to not work correctly in Safari. Use 'mousedown' or 'mouseup' instead.\n\n          case 'mouseenter':\n          case 'mouseleave':\n          case 'mousedown':\n          case 'mouseup':\n            eventClass = 'MouseEvents';\n            break;\n\n          case 'focus':\n          case 'change':\n          case 'blur':\n          case 'select':\n            eventClass = 'HTMLEvents';\n            break;\n\n          default:\n            throw \"fireEvent: Couldn't find an event class for event '\".concat(eventName, \"'.\");\n            break;\n        }\n\n        var event = doc.createEvent(eventClass);\n        var bubbles = eventName != 'change';\n        event.initEvent(eventName, bubbles, true); // All events created as bubbling and cancelable.\n\n        event.synthetic = true; // allow detection of synthetic events\n        // The second parameter says go ahead with the default action\n\n        node.dispatchEvent(event, true);\n      } else if (node.fireEvent) {\n        // IE-old school style\n        var event = doc.createEventObject();\n        event.synthetic = true; // allow detection of synthetic events\n\n        node.fireEvent(\"on\".concat(eventName), event);\n      }\n    },\n    index: function index(elm) {\n      elm = DTUtil.get(elm);\n      var c = elm.parentNode.children,\n          i = 0;\n\n      for (; i < c.length; i++) {\n        if (c[i] == elm) return i;\n      }\n    },\n    trim: function trim(string) {\n      return string.trim();\n    },\n    eventTriggered: function eventTriggered(e) {\n      if (e.currentTarget.dataset.triggered) {\n        return true;\n      }\n\n      e.currentTarget.dataset.triggered = true;\n      return false;\n    },\n    remove: function remove(el) {\n      if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    },\n    find: function find(parent, query) {\n      parent = DTUtil.get(parent);\n\n      if (parent) {\n        return parent.querySelector(query);\n      }\n    },\n    findAll: function findAll(parent, query) {\n      parent = DTUtil.get(parent);\n\n      if (parent) {\n        return parent.querySelectorAll(query);\n      }\n    },\n    insertAfter: function insertAfter(el, referenceNode) {\n      return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n    },\n    parents: function parents(elem, selector) {\n      // Element.matches() polyfill\n      if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n          var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n              i = matches.length;\n\n          while (--i >= 0 && matches.item(i) !== this) {}\n\n          return i > -1;\n        };\n      } // Set up a parent array\n\n\n      var parents = []; // Push each parent element to the array\n\n      for (; elem && elem !== document; elem = elem.parentNode) {\n        if (selector) {\n          if (elem.matches(selector)) {\n            parents.push(elem);\n          }\n\n          continue;\n        }\n\n        parents.push(elem);\n      } // Return our parent array\n\n\n      return parents;\n    },\n    children: function children(el, selector, log) {\n      if (!el || !el.childNodes) {\n        return;\n      }\n\n      var result = [],\n          i = 0,\n          l = el.childNodes.length;\n\n      for (var i; i < l; ++i) {\n        if (el.childNodes[i].nodeType == 1 && DTUtil.matches(el.childNodes[i], selector, log)) {\n          result.push(el.childNodes[i]);\n        }\n      }\n\n      return result;\n    },\n    child: function child(el, selector, log) {\n      var children = DTUtil.children(el, selector, log);\n      return children ? children[0] : null;\n    },\n    matches: function matches(el, selector, log) {\n      var p = Element.prototype;\n\n      var f = p.matches || p.webkitMatchesSelector || p.mozMatchesSelector || p.msMatchesSelector || function (s) {\n        return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n      };\n\n      if (el && el.tagName) {\n        return f.call(el, selector);\n      }\n\n      return false;\n    },\n    data: function data(element) {\n      element = DTUtil.get(element);\n      return {\n        set: function set(name, data) {\n          if (element === undefined) {\n            return;\n          }\n\n          if (element.customDataTag === undefined) {\n            window.DTUtilElementDataStoreID++;\n            element.customDataTag = window.DTUtilElementDataStoreID;\n          }\n\n          if (window.DTUtilElementDataStore[element.customDataTag] === undefined) {\n            window.DTUtilElementDataStore[element.customDataTag] = {};\n          }\n\n          window.DTUtilElementDataStore[element.customDataTag][name] = data;\n        },\n        get: function get(name) {\n          if (element === undefined) {\n            return;\n          }\n\n          if (element.customDataTag === undefined) {\n            return null;\n          }\n\n          return this.has(name) ? window.DTUtilElementDataStore[element.customDataTag][name] : null;\n        },\n        has: function has(name) {\n          if (element === undefined) {\n            return false;\n          }\n\n          if (element.customDataTag === undefined) {\n            return false;\n          }\n\n          return !!(window.DTUtilElementDataStore[element.customDataTag] && window.DTUtilElementDataStore[element.customDataTag][name]);\n        },\n        remove: function remove(name) {\n          if (element && this.has(name)) {\n            delete window.DTUtilElementDataStore[element.customDataTag][name];\n          }\n        }\n      };\n    },\n    outerWidth: function outerWidth(el, margin) {\n      var width;\n\n      if (margin === true) {\n        width = parseFloat(el.offsetWidth);\n        width += parseFloat(DTUtil.css(el, 'margin-left')) + parseFloat(DTUtil.css(el, 'margin-right'));\n        return parseFloat(width);\n      }\n\n      width = parseFloat(el.offsetWidth);\n      return width;\n    },\n    offset: function offset(elem) {\n      var rect, win;\n      elem = DTUtil.get(elem);\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    height: function height(el) {\n      return DTUtil.css(el, 'height');\n    },\n    visible: function visible(el) {\n      return !(el.offsetWidth === 0 && el.offsetHeight === 0);\n    },\n    attr: function attr(el, name, value) {\n      el = DTUtil.get(el);\n\n      if (el == undefined) {\n        return;\n      }\n\n      if (value !== undefined) {\n        el.setAttribute(name, value);\n      } else {\n        return el.getAttribute(name);\n      }\n    },\n    hasAttr: function hasAttr(el, name) {\n      el = DTUtil.get(el);\n\n      if (el == undefined) {\n        return;\n      }\n\n      return !!el.getAttribute(name);\n    },\n    removeAttr: function removeAttr(el, name) {\n      el = DTUtil.get(el);\n\n      if (el == undefined) {\n        return;\n      }\n\n      el.removeAttribute(name);\n    },\n    animate: function animate(from, to, duration, update, easing, done) {\n      /**\r\n       * TinyAnimate.easings\r\n       *  Adapted from jQuery Easing\r\n       */\n      var easings = {};\n      var easing;\n\n      easings.linear = function (t, b, c, d) {\n        return c * t / d + b;\n      };\n\n      easing = easings.linear; // Early bail out if called incorrectly\n\n      if (typeof from !== 'number' || typeof to !== 'number' || typeof duration !== 'number' || typeof update !== 'function') {\n        return;\n      } // Create mock done() function if necessary\n\n\n      if (typeof done !== 'function') {\n        done = function done() {};\n      } // Pick implementation (requestAnimationFrame | setTimeout)\n\n\n      var rAF = window.requestAnimationFrame || function (callback) {\n        window.setTimeout(callback, 1000 / 50);\n      }; // Animation loop\n\n\n      var canceled = false;\n      var change = to - from;\n\n      function loop(timestamp) {\n        var time = (timestamp || +new Date()) - start;\n\n        if (time >= 0) {\n          update(easing(time, from, change, duration));\n        }\n\n        if (time >= 0 && time >= duration) {\n          update(to);\n          done();\n        } else {\n          rAF(loop);\n        }\n      }\n\n      update(from); // Start animation loop\n\n      var start = window.performance && window.performance.now ? window.performance.now() : +new Date();\n      rAF(loop);\n    },\n    actualCss: function actualCss(el, prop, cache) {\n      el = DTUtil.get(el);\n      var css = '';\n\n      if (el instanceof HTMLElement === false) {\n        return;\n      }\n\n      if (!el.getAttribute(\"kt-hidden-\".concat(prop)) || cache === false) {\n        var value; // the element is hidden so:\n        // making the el block so we can meassure its height but still be hidden\n\n        css = el.style.cssText;\n        el.style.cssText = 'position: absolute; visibility: hidden; display: block;';\n\n        if (prop == 'width') {\n          value = el.offsetWidth;\n        } else if (prop == 'height') {\n          value = el.offsetHeight;\n        }\n\n        el.style.cssText = css; // store it in cache\n\n        el.setAttribute(\"kt-hidden-\".concat(prop), value);\n        return parseFloat(value);\n      } // store it in cache\n\n\n      return parseFloat(el.getAttribute(\"kt-hidden-\".concat(prop)));\n    },\n    actualHeight: function actualHeight(el, cache) {\n      return DTUtil.actualCss(el, 'height', cache);\n    },\n    actualWidth: function actualWidth(el, cache) {\n      return DTUtil.actualCss(el, 'width', cache);\n    },\n    getScroll: function getScroll(element, method) {\n      // The passed in `method` value should be 'Top' or 'Left'\n      method = \"scroll\".concat(method);\n      return element == window || element == document ? self[method == 'scrollTop' ? 'pageYOffset' : 'pageXOffset'] || browserSupportsBoxModel && document.documentElement[method] || document.body[method] : element[method];\n    },\n    css: function css(el, styleProp, value) {\n      el = DTUtil.get(el);\n\n      if (!el) {\n        return;\n      }\n\n      if (value !== undefined) {\n        el.style[styleProp] = value;\n      } else {\n        var defaultView = (el.ownerDocument || document).defaultView; // W3C standard way:\n\n        if (defaultView && defaultView.getComputedStyle) {\n          // sanitize property name to css notation\n          // (hyphen separated words eg. font-Size)\n          styleProp = styleProp.replace(/([A-Z])/g, '-$1').toLowerCase();\n          return defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n        } else if (el.currentStyle) {\n          // IE\n          // sanitize property name to camelCase\n          styleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n            return letter.toUpperCase();\n          });\n          value = el.currentStyle[styleProp]; // convert other units to pixels on IE\n\n          if (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n            return function (value) {\n              var oldLeft = el.style.left,\n                  oldRsLeft = el.runtimeStyle.left;\n              el.runtimeStyle.left = el.currentStyle.left;\n              el.style.left = value || 0;\n              value = \"\".concat(el.style.pixelLeft, \"px\");\n              el.style.left = oldLeft;\n              el.runtimeStyle.left = oldRsLeft;\n              return value;\n            }(value);\n          }\n\n          return value;\n        }\n      }\n    },\n    slide: function slide(el, dir, speed, callback, recalcMaxHeight) {\n      if (!el || dir == 'up' && DTUtil.visible(el) === false || dir == 'down' && DTUtil.visible(el) === true) {\n        return;\n      }\n\n      speed = speed || 600;\n      var calcHeight = DTUtil.actualHeight(el);\n      var calcPaddingTop = false;\n      var calcPaddingBottom = false;\n\n      if (DTUtil.css(el, 'padding-top') && DTUtil.data(el).has('slide-padding-top') !== true) {\n        DTUtil.data(el).set('slide-padding-top', DTUtil.css(el, 'padding-top'));\n      }\n\n      if (DTUtil.css(el, 'padding-bottom') && DTUtil.data(el).has('slide-padding-bottom') !== true) {\n        DTUtil.data(el).set('slide-padding-bottom', DTUtil.css(el, 'padding-bottom'));\n      }\n\n      if (DTUtil.data(el).has('slide-padding-top')) {\n        calcPaddingTop = parseInt(DTUtil.data(el).get('slide-padding-top'));\n      }\n\n      if (DTUtil.data(el).has('slide-padding-bottom')) {\n        calcPaddingBottom = parseInt(DTUtil.data(el).get('slide-padding-bottom'));\n      }\n\n      if (dir == 'up') {\n        // up\n        el.style.cssText = 'display: block; overflow: hidden;';\n\n        if (calcPaddingTop) {\n          DTUtil.animate(0, calcPaddingTop, speed, function (value) {\n            el.style.paddingTop = \"\".concat(calcPaddingTop - value, \"px\");\n          }, 'linear');\n        }\n\n        if (calcPaddingBottom) {\n          DTUtil.animate(0, calcPaddingBottom, speed, function (value) {\n            el.style.paddingBottom = \"\".concat(calcPaddingBottom - value, \"px\");\n          }, 'linear');\n        }\n\n        DTUtil.animate(0, calcHeight, speed, function (value) {\n          el.style.height = \"\".concat(calcHeight - value, \"px\");\n        }, 'linear', function () {\n          callback();\n          el.style.height = '';\n          el.style.display = 'none';\n        });\n      } else if (dir == 'down') {\n        // down\n        el.style.cssText = 'display: block; overflow: hidden;';\n\n        if (calcPaddingTop) {\n          DTUtil.animate(0, calcPaddingTop, speed, function (value) {\n            el.style.paddingTop = \"\".concat(value, \"px\");\n          }, 'linear', function () {\n            el.style.paddingTop = '';\n          });\n        }\n\n        if (calcPaddingBottom) {\n          DTUtil.animate(0, calcPaddingBottom, speed, function (value) {\n            el.style.paddingBottom = \"\".concat(value, \"px\");\n          }, 'linear', function () {\n            el.style.paddingBottom = '';\n          });\n        }\n\n        DTUtil.animate(0, calcHeight, speed, function (value) {\n          el.style.height = \"\".concat(value, \"px\");\n        }, 'linear', function () {\n          callback();\n          el.style.height = '';\n          el.style.display = '';\n          el.style.overflow = '';\n        });\n      }\n    },\n    slideUp: function slideUp(el, speed, callback) {\n      DTUtil.slide(el, 'up', speed, callback);\n    },\n    slideDown: function slideDown(el, speed, callback) {\n      DTUtil.slide(el, 'down', speed, callback);\n    },\n    show: function show(el, display) {\n      if (typeof el !== 'undefined') {\n        el.style.display = display || 'block';\n      }\n    },\n    hide: function hide(el) {\n      if (typeof el !== 'undefined') {\n        el.style.display = 'none';\n      }\n    },\n    addEvent: function addEvent(el, type, handler, one) {\n      el = DTUtil.get(el);\n\n      if (typeof el !== 'undefined') {\n        el.addEventListener(type, handler);\n      }\n    },\n    removeEvent: function removeEvent(el, type, handler) {\n      el = DTUtil.get(el);\n      el.removeEventListener(type, handler);\n    },\n    on: function on(element, selector, event, handler) {\n      if (!selector) {\n        return;\n      }\n\n      var eventId = DTUtil.getUniqueID('event');\n\n      window.DTUtilDelegatedEventHandlers[eventId] = function (e) {\n        var targets = element.querySelectorAll(selector);\n        var target = e.target;\n\n        while (target && target !== element) {\n          for (var i = 0, j = targets.length; i < j; i++) {\n            if (target === targets[i]) {\n              handler.call(target, e);\n            }\n          }\n\n          target = target.parentNode;\n        }\n      };\n\n      DTUtil.addEvent(element, event, window.DTUtilDelegatedEventHandlers[eventId]);\n      return eventId;\n    },\n    off: function off(element, event, eventId) {\n      if (!element || !window.DTUtilDelegatedEventHandlers[eventId]) {\n        return;\n      }\n\n      DTUtil.removeEvent(element, event, window.DTUtilDelegatedEventHandlers[eventId]);\n      delete window.DTUtilDelegatedEventHandlers[eventId];\n    },\n    one: function onetime(el, type, callback) {\n      el = DTUtil.get(el);\n      el.addEventListener(type, function callee(e) {\n        // remove event\n        if (e.target && e.target.removeEventListener) {\n          e.target.removeEventListener(e.type, callee);\n        } // call handler\n\n\n        return callback(e);\n      });\n    },\n    hash: function hash(str) {\n      var hash = 0,\n          i,\n          chr;\n      if (str.length === 0) return hash;\n\n      for (i = 0; i < str.length; i++) {\n        chr = str.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    },\n    animateClass: function animateClass(el, animationName, callback) {\n      var animation;\n      var animations = {\n        animation: 'animationend',\n        OAnimation: 'oAnimationEnd',\n        MozAnimation: 'mozAnimationEnd',\n        WebkitAnimation: 'webkitAnimationEnd',\n        msAnimation: 'msAnimationEnd'\n      };\n\n      for (var t in animations) {\n        if (el.style[t] !== undefined) {\n          animation = animations[t];\n        }\n      }\n\n      DTUtil.addClass(el, \"animated \".concat(animationName));\n      DTUtil.one(el, animation, function () {\n        DTUtil.removeClass(el, \"animated \".concat(animationName));\n      });\n\n      if (callback) {\n        DTUtil.one(el, animation, callback);\n      }\n    },\n    transitionEnd: function transitionEnd(el, callback) {\n      var transition;\n      var transitions = {\n        transition: 'transitionend',\n        OTransition: 'oTransitionEnd',\n        MozTransition: 'mozTransitionEnd',\n        WebkitTransition: 'webkitTransitionEnd',\n        msTransition: 'msTransitionEnd'\n      };\n\n      for (var t in transitions) {\n        if (el.style[t] !== undefined) {\n          transition = transitions[t];\n        }\n      }\n\n      DTUtil.one(el, transition, callback);\n    },\n    animationEnd: function animationEnd(el, callback) {\n      var animation;\n      var animations = {\n        animation: 'animationend',\n        OAnimation: 'oAnimationEnd',\n        MozAnimation: 'mozAnimationEnd',\n        WebkitAnimation: 'webkitAnimationEnd',\n        msAnimation: 'msAnimationEnd'\n      };\n\n      for (var t in animations) {\n        if (el.style[t] !== undefined) {\n          animation = animations[t];\n        }\n      }\n\n      DTUtil.one(el, animation, callback);\n    },\n    animateDelay: function animateDelay(el, value) {\n      var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\n\n      for (var i = 0; i < vendors.length; i++) {\n        DTUtil.css(el, \"\".concat(vendors[i], \"animation-delay\"), value);\n      }\n    },\n    animateDuration: function animateDuration(el, value) {\n      var vendors = ['webkit-', 'moz-', 'ms-', 'o-', ''];\n\n      for (var i = 0; i < vendors.length; i++) {\n        DTUtil.css(el, \"\".concat(vendors[i], \"animation-duration\"), value);\n      }\n    },\n    scrollTo: function scrollTo(target, offset, duration) {\n      var duration = duration || 500;\n      var target = DTUtil.get(target);\n      var targetPos = target ? DTUtil.offset(target).top : 0;\n      var scrollPos = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n      var from, to;\n\n      if (targetPos > scrollPos) {\n        from = targetPos;\n        to = scrollPos;\n      } else {\n        from = scrollPos;\n        to = targetPos;\n      }\n\n      if (offset) {\n        to += offset;\n      }\n\n      DTUtil.animate(from, to, duration, function (value) {\n        document.documentElement.scrollTop = value;\n        document.body.parentNode.scrollTop = value;\n        document.body.scrollTop = value;\n      }); // , easing, done\n    },\n    scrollTop: function scrollTop(offset, duration) {\n      DTUtil.scrollTo(null, offset, duration);\n    },\n    isArray: function isArray(obj) {\n      return obj && Array.isArray(obj);\n    },\n    ready: function ready(callback) {\n      if (document.attachEvent ? document.readyState === 'complete' : document.readyState !== 'loading') {\n        callback();\n      } else {\n        document.addEventListener('DOMContentLoaded', callback);\n      }\n    },\n    isEmpty: function isEmpty(obj) {\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    numberString: function numberString(nStr) {\n      nStr += '';\n      var x = nStr.split('.');\n      var x1 = x[0];\n      var x2 = x.length > 1 ? \".\".concat(x[1]) : '';\n      var rgx = /(\\d+)(\\d{3})/;\n\n      while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n      }\n\n      return x1 + x2;\n    },\n    detectIE: function detectIE() {\n      var ua = window.navigator.userAgent; // Test values; Uncomment to check result …\n      // IE 10\n      // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';\n      // IE 11\n      // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';\n      // Edge 12 (Spartan)\n      // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';\n      // Edge 13\n      // ua = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';\n\n      var msie = ua.indexOf('MSIE ');\n\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('Trident/');\n\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('Edge/');\n\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      } // other browser\n\n\n      return false;\n    },\n    isRTL: function isRTL() {\n      return DTUtil.attr(DTUtil.get('html'), 'direction') == 'rtl';\n    },\n    setHTML: function setHTML(el, html) {\n      if (DTUtil.get(el)) {\n        DTUtil.get(el).innerHTML = html;\n      }\n    },\n    getHTML: function getHTML(el) {\n      if (DTUtil.get(el)) {\n        return DTUtil.get(el).innerHTML;\n      }\n    },\n    throttle: function throttle(func, limit) {\n      var inThrottle;\n      return function () {\n        var args = arguments;\n        var context = this;\n\n        if (!inThrottle) {\n          func.apply(context, args);\n          inThrottle = true;\n          setTimeout(function () {\n            return inThrottle = false;\n          }, limit);\n        }\n      };\n    }\n  };\n}(); // Initialize DTUtil class on document ready\n\n\nDTUtil.ready(function () {\n  DTUtil.init();\n});"}}]);